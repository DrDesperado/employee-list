{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdateEmployeeComponent_div_7_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateEmployeeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, UpdateEmployeeComponent_div_7_small_1_Template, 2, 0, \"small\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.form.get(\"firstName\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction UpdateEmployeeComponent_div_12_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateEmployeeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, UpdateEmployeeComponent_div_12_small_1_Template, 2, 0, \"small\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.form.get(\"lastName\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction UpdateEmployeeComponent_div_17_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u041F\\u043E\\u043B\\u0435 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateEmployeeComponent_div_17_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u044B\\u0439 email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateEmployeeComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, UpdateEmployeeComponent_div_17_small_1_Template, 2, 0, \"small\", 9);\n    i0.ɵɵtemplate(2, UpdateEmployeeComponent_div_17_small_2_Template, 2, 0, \"small\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.form.get(\"emailId\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.form.get(\"emailId\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nexport class UpdateEmployeeComponent {\n  constructor(employeeService, router) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.form = new FormGroup({});\n    this.selectedEmployee = new Employee();\n    this.id = this.router.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.selectedEmployee = data;\n      this.form.addControl('firstName', Validators.required);\n      this.form.addControl('lastName', Validators.required);\n      this.form.addControl('emailId', [Validators.required, Validators.email]);\n    });\n    console.log(this.selectedEmployee);\n  }\n  ngOnInit() {}\n  onSubmit() {}\n}\nUpdateEmployeeComponent.ɵfac = function UpdateEmployeeComponent_Factory(t) {\n  return new (t || UpdateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUpdateEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateEmployeeComponent,\n  selectors: [[\"app-update-employee\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\"], [\"class\", \"validation\", 4, \"ngIf\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\"], [\"type\", \"email\", \"id\", \"emailId\", \"formControlName\", \"emailId\", \"name\", \"emailId\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"validation\"], [4, \"ngIf\"]],\n  template: function UpdateEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Update Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateEmployeeComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\");\n      i0.ɵɵtext(5, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵtemplate(7, UpdateEmployeeComponent_div_7_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵtemplate(12, UpdateEmployeeComponent_div_12_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\");\n      i0.ɵɵtext(15, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 6);\n      i0.ɵɵtemplate(17, UpdateEmployeeComponent_div_17_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 7);\n      i0.ɵɵtext(19, \"Update\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.form.get(\"firstName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.form.get(\"firstName\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.form.get(\"lastName\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.form.get(\"lastName\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.form.get(\"emailId\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.form.get(\"emailId\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,QAAQ,QAAQ,aAAa;;;;;;;;ICWlCC,6BAA2D;IACvDA,oJACJ;IAAAA,iBAAQ;;;;;IANRA,8BAGC;IACDA,kFAEQ;IACRA,iBAAM;;;;;IAHEA,eAAiD;IAAjDA,6GAAiD;;;;;IAmBzDA,6BAA0D;IACtDA,oJACJ;IAAAA,iBAAQ;;;;;IANRA,8BAGC;IACDA,mFAEQ;IACRA,iBAAM;;;;;IAHEA,eAAgD;IAAhDA,4GAAgD;;;;;IAmBxDA,6BAAyD;IACrDA,oJACJ;IAAAA,iBAAQ;;;;;IAERA,6BAAsD;IAClDA,+HACJ;IAAAA,iBAAQ;;;;;IAVRA,8BAGC;IACDA,mFAEQ;IAERA,mFAEQ;IACRA,iBAAM;;;;;;IAPEA,eAA+C;IAA/CA,2GAA+C;IAI/CA,eAA4C;IAA5CA,wGAA4C;;;AD5CxD,OAAM,MAAOC,uBAAuB;EAKlCC,YACUC,eAAgC,EAChCC,MAAsB;IADtB,oBAAe,GAAfD,eAAe;IACf,WAAM,GAANC,MAAM;IANhB,SAAI,GAAc,IAAIP,SAAS,CAAC,EAAE,CAAC;IAEnC,qBAAgB,GAAa,IAAIE,QAAQ,EAAE;IAMzC,IAAI,CAACM,EAAE,GAAG,IAAI,CAACD,MAAM,CAACE,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC3C,IAAI,CAACJ,eAAe,CAACK,eAAe,CAAC,IAAI,CAACH,EAAE,CAAC,CAACI,SAAS,CAAEC,IAAI,IAAI;MAC/D,IAAI,CAACC,gBAAgB,GAAGD,IAAI;MAC5B,IAAI,CAACE,IAAI,CAACC,UAAU,CAAC,WAAW,EAAEf,UAAU,CAACgB,QAAQ,CAAC;MACtD,IAAI,CAACF,IAAI,CAACC,UAAU,CAAC,UAAU,EAAEf,UAAU,CAACgB,QAAQ,CAAC;MACrD,IAAI,CAACF,IAAI,CAACC,UAAU,CAAC,SAAS,EAAE,CAACf,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,KAAK,CAAC,CAAC;IAC1E,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,gBAAgB,CAAC;EACpC;EAEAO,QAAQ,IAAU;EAElBC,QAAQ,IAAI;;AArBDlB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbpCxB,6BAAwB;MAAAA,+BAAe;MAAAA,iBAAK;MAC5CA,+BAAiD;MAA3CA;QAAA,OAAYyB,cAAU;MAAA,EAAC;MAC3BzB,8BAAwB;MACfA,0BAAU;MAAAA,iBAAQ;MACzBA,2BAME;MACFA,wEAOM;MACRA,iBAAM;MAENA,8BAAwB;MACfA,0BAAS;MAAAA,iBAAQ;MACxBA,4BAME;MACFA,0EAOM;MACRA,iBAAM;MAENA,+BAAwB;MACfA,sBAAK;MAAAA,iBAAQ;MACpBA,4BAME;MACFA,0EAWM;MACRA,iBAAM;MAENA,kCAA0E;MAAAA,uBAAM;MAAAA,iBAAS;;;;;;MA9D7DA,eAAkB;MAAlBA,oCAAkB;MAW3CA,eAAsE;MAAtEA,2KAAsE;MAmBtEA,eAAoE;MAApEA,yKAAoE;MAmBpEA,eAAkE;MAAlEA,uKAAkE;MAavBA,eAA2B;MAA3BA,2CAA2B","names":["FormGroup","Validators","Employee","i0","UpdateEmployeeComponent","constructor","employeeService","router","id","snapshot","params","getEmployeeById","subscribe","data","selectedEmployee","form","addControl","required","email","console","log","ngOnInit","onSubmit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/drdesperado/Documents/projects/Employees/employee/frontend/src/app/update-employee/update-employee.component.ts","/home/drdesperado/Documents/projects/Employees/employee/frontend/src/app/update-employee/update-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { __values } from 'tslib';\nimport { Employee } from '../employee';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { EmployeeService } from '../services/employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.scss'],\n})\nexport class UpdateEmployeeComponent implements OnInit {\n  form: FormGroup = new FormGroup({});\n  id: number;\n  selectedEmployee: Employee = new Employee();\n\n  constructor(\n    private employeeService: EmployeeService,\n    private router: ActivatedRoute\n  ) {\n    this.id = this.router.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe((data) => {\n      this.selectedEmployee = data;\n      this.form.addControl('firstName', Validators.required);\n      this.form.addControl('lastName', Validators.required);\n      this.form.addControl('emailId', [Validators.required, Validators.email]);\n    });\n    console.log(this.selectedEmployee);\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit() {}\n}\n","<h3 class=\"text-center\">Update Employee</h3>\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label>First Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"firstName\"\n      formControlName=\"firstName\"\n      name=\"firstName\"\n    />\n    <div \n    *ngIf=\"form.get('firstName')?.invalid && form.get('firstName')?.touched\"\n    class=\"validation\"\n    >\n    <small *ngIf=\"form.get('firstName')?.hasError('required')\">\n        Поле не может быть пустым\n    </small>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Last Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"lastName\"\n      formControlName=\"lastName\"\n      name=\"lastName\"\n    />\n    <div \n    *ngIf=\"form.get('lastName')?.invalid && form.get('lastName')?.touched\"\n    class=\"validation\"\n    >\n    <small *ngIf=\"form.get('lastName')?.hasError('required')\">\n        Поле не может быть пустым\n    </small>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input\n      type=\"email\"\n      class=\"form-control\"\n      id=\"emailId\"\n      formControlName=\"emailId\"\n      name=\"emailId\"\n    />\n    <div \n    *ngIf=\"form.get('emailId')?.invalid && form.get('emailId')?.touched\"\n    class=\"validation\"\n    >\n    <small *ngIf=\"form.get('emailId')?.hasError('required')\">\n        Поле не может быть пустым\n    </small>\n\n    <small *ngIf=\"form.get('emailId')?.hasError('email')\">\n        Введите корректный email\n    </small>\n    </div>\n  </div>\n\n  <button class=\"btn btn-success\" type=\"submit\" [disabled] = \"form.invalid\">Update</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}